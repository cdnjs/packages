{
  "name": "nfsfu234-form-validation",
  "author": "NFORSHIFU234 Dev || Shifu-Nfor Nyuiring-yoh Rhagninyui",
  "homepage": "https://nfsfu234-form-validation.netlify.app/",
  "version": "2.3.1",
  "config": {
    "version_short": "2.3"
  },
  "description": "NFSFU234 Form Validation is a lightweight and user-friendly JavaScript library designed for validating HTML form elements, with a special emphasis on textarea fields. It offers customizable validation messages, comprehensive support for required field checks, seamless inline error displays, and convenient modal error notifications.",
  "license": "MIT",
  "main": "dist\\js\\nfsfu234FormValidation.js",
  "style" : "dist\\css\\nfsfu234FormValidation.css",
  "repository": {
    "type": "git",
    "url": "https://github.com/nforshifu234dev/nfsfu234-form-validation.git"
  },
  "bugs": {
    "url": "https://github.com/nforshifu234dev/nfsfu234-form-validation/issues"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "build:js": "webpack --config webpack.js.config.js",
    "build:css": "webpack --config webpack.css.config.js"
  },
  "autoupdate": {
    "source": "npm",
    "target": "nfsfu234-form-validation",
    "fileMap": [
      {
        "basePath": "dist",
        "files": [
          "js/**/*.js",
          "css/**/*.css",
          "js/**/*.map", 
          "css/**/*.map" 
        ]
      }
    ]
  },  
  "files": [
    "js/**/*.js",
    "css/**/*.css",
    "js/**/*.map", 
    "css/**/*.map" 
  ],
  "jspm": {
    "registry": "npm",
    "main": "dist/js/nfsfu234FormValidation",
    "directories": {
      "lib": "dist"
    }
  },
  "devDependencies": {
    "nfsfu234-form-validation": "^2.3.1",
    "@babel/core": "^7.23.3",
    "@babel/preset-env": "^7.23.3",
    "babel-loader": "^9.1.3",
    "copy-webpack-plugin": "^11.0.0",
    "css-loader": "^6.8.1",
    "css-minimizer-webpack-plugin": "^5.0.1",
    "file-loader": "^6.2.0",
    "jest": "^29.7.0",
    "mini-css-extract-plugin": "^2.7.6",
    "style-loader": "^3.3.3",
    "terser-webpack-plugin": "^5.3.9",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^4.15.1"
  },
  "dependencies": {
    "bcryptjs": "^2.4.3",
    "buffer": "^6.0.3",
    "crypto-browserify": "^3.12.0",
    "stream-browserify": "^3.0.0"
  },
  "keywords": [
    "form",
    "validation",
    "library",
    "input",
    "HTML",
    "browser",
    "node.js",
    "frontend",
    "backend",
    "web",
    "development",
    "validation library",
    "user experience",
    "input validation",
    "form validation",
    "custom validation",
    "error handling",
    "shifu",
    "nforshifu234dev",
    "nforshifu_234",
    "nyuiring-yoh",
    "email validation",
    "password strength",
    "input masking",
    "real-time validation",
    "field validation",
    "custom validators",
    "input formatting",
    "data validation",
    "form submission",
    "user input validation",
    "regex validation",
    "data integrity",
    "client-side validation",
    "server-side validation",
    "cross-browser support",
    "input sanitization",
    "input normalization",
    "field constraints",
    "validation rules",
    "input field validation",
    "custom form validation",
    "input validation rules",
    "form input handling",
    "form data verification",
    "data entry validation",
    "form field verification",
    "input error checking",
    "form error messages",
    "validate user inputs",
    "form submission validation",
    "form error handling",
    "input data validation",
    "user input verification",
    "input error messages",
    "validation pattern",
    "form data validation",
    "form field checks",
    "valid input detection",
    "validation library for JavaScript",
    "frontend form validation",
    "backend form validation",
    "browser form validation",
    "Node.js form validation",
    "web form validation",
    "input field formatting",
    "form input security",
    "form input filtering",
    "input validation patterns",
    "input validation library",
    "email format validation",
    "password complexity rules",
    "validate password strength",
    "password policy checks",
    "input data cleansing",
    "input data normalization",
    "form input restrictions",
    "validate form fields",
    "form input sanitation",
    "user-friendly validation",
    "custom error messages",
    "input validation best practices",
    "form input guidelines",
    "secure form validation",
    "validate form submissions",
    "form validation patterns",
    "input validation techniques",
    "error feedback in forms",
    "advanced input validation",
    "beginner-friendly validation",
    "validation for rookies",
    "entry-level form validation",
    "simple input validation",
    "easy form validation",
    "basic validation techniques",
    "validation basics for beginners",
    "getting started with form validation"
  ]
}
